#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏ —Å–æ–±—ã—Ç–∏–π –≤ —Ä–∞—Å—á–µ—Ç–Ω–æ–µ —è–¥—Ä–æ
"""

import sys
import pandas as pd
from datetime import datetime, timedelta
import numpy as np

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append('.')

from app import FunnelCalculator, FunnelConfig, CountingMethod

def create_test_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    base_time = datetime(2024, 1, 1)
    
    events_data = []
    for user_id in range(1, 101):  # 100 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        user_id_str = f"user_{user_id:03d}"
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
        events_data.append({
            'user_id': user_id_str,
            'event_name': 'User Sign-Up',
            'timestamp': base_time + timedelta(minutes=user_id)
        })
        
        # 80% –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–µ–ª–∞—é—Ç –≤—Ç–æ—Ä–æ–µ —Å–æ–±—ã—Ç–∏–µ
        if user_id <= 80:
            events_data.append({
                'user_id': user_id_str,
                'event_name': 'Verify Email',
                'timestamp': base_time + timedelta(minutes=user_id + 10)
            })
        
        # 60% –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–µ–ª–∞—é—Ç —Ç—Ä–µ—Ç—å–µ —Å–æ–±—ã—Ç–∏–µ
        if user_id <= 60:
            events_data.append({
                'user_id': user_id_str,
                'event_name': 'First Login',
                'timestamp': base_time + timedelta(minutes=user_id + 20)
            })
    
    df = pd.DataFrame(events_data)
    df['timestamp'] = pd.to_datetime(df['timestamp'])
    return df

def test_funnel_calculation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç –≤–æ—Ä–æ–Ω–∫–∏"""
    print("üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ –≤–æ—Ä–æ–Ω–∫–∏...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    events_df = create_test_data()
    print(f"üìä –°–æ–∑–¥–∞–ª–∏ {len(events_df)} —Å–æ–±—ã—Ç–∏–π –¥–ª—è {events_df['user_id'].nunique()} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = FunnelConfig(
        conversion_window_hours=24,
        counting_method=CountingMethod.UNIQUE_USERS
    )
    print(f"‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {config.to_dict()}")
    
    # –°–ø–∏—Å–æ–∫ —à–∞–≥–æ–≤ –≤–æ—Ä–æ–Ω–∫–∏
    funnel_steps = ['User Sign-Up', 'Verify Email', 'First Login']
    print(f"üéØ –®–∞–≥–∏ –≤–æ—Ä–æ–Ω–∫–∏: {funnel_steps}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –µ—Å—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö
    available_events = set(events_df['event_name'].unique())
    missing_events = [step for step in funnel_steps if step not in available_events]
    if missing_events:
        print(f"‚ùå –°–æ–±—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –¥–∞–Ω–Ω—ã—Ö: {missing_events}")
        return False
    else:
        print(f"‚úÖ –í—Å–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞–π–¥–µ–Ω—ã –≤ –¥–∞–Ω–Ω—ã—Ö: {available_events}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—Å—á–µ—Ç
    calculator = FunnelCalculator(config)
    
    try:
        results = calculator.calculate_funnel_metrics(events_df, funnel_steps)
        
        print("\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞:")
        print(f"  Steps: {results.steps}")
        print(f"  Users count: {results.users_count}")
        print(f"  Conversion rates: {results.conversion_rates}")
        print(f"  Drop offs: {results.drop_offs}")
        print(f"  Drop off rates: {results.drop_off_rates}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        expected_users = [100, 80, 60]  # –û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ
        
        if results.users_count == expected_users:
            print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º!")
            return True
        else:
            print(f"‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ù–ï —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º. –û–∂–∏–¥–∞–ª–æ—Å—å: {expected_users}, –ø–æ–ª—É—á–µ–Ω–æ: {results.users_count}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_funnel_calculation()
    if success:
        print("\nüéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ! –†–∞—Å—á–µ—Ç–Ω–æ–µ —è–¥—Ä–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("\nüí• –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω! –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞—Å—á–µ—Ç–Ω—ã–º —è–¥—Ä–æ–º.")
    
    sys.exit(0 if success else 1) 