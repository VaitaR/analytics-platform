name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Generate test data
      run: |
        echo "üîÑ Generating test data for CI environment..."
        python tests/test_data_generator.py
        echo "‚úÖ Test data generated successfully"

    - name: Run tests with coverage
      run: |
        echo "üîç Debug: Python version and environment"
        python --version
        pip list | grep -E "(pytest|polars|pandas|streamlit|bokeh)" || echo "Some packages not found"
        echo "üîç Debug: Checking imports"
        python -c "import app; print('‚úÖ app imported successfully')" || echo "‚ùå app import failed"
        python -c "import models; print('‚úÖ models imported successfully')" || echo "‚ùå models import failed"
        echo "üîç Debug: Running pytest directly"
        python -m pytest tests/ --cov=app --cov-report=html:htmlcov --cov-report=term-missing --cov-report=xml:coverage.xml --junit-xml=test-results.xml -v

    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload HTML coverage report
      if: matrix.python-version == '3.12'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          test-results.xml
          coverage.xml

  advanced-tests:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Generate test data
      run: |
        echo "üîÑ Generating test data for advanced tests..."
        python tests/test_data_generator.py
        echo "‚úÖ Test data generated successfully"

    - name: Run comprehensive tests
      run: |
        echo "üîç Running comprehensive tests..."
        python -m pytest tests/ -v --tb=short

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: advanced-test-results
        path: |
          test-results.xml

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run code quality checks (unified)
      run: |
        make check

    - name: Verify GitHub Actions format compatibility
      run: |
        ruff check . --output-format=github

  ci-simulation:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Run full CI simulation
      run: |
        make ci-check

    - name: Upload CI simulation results
      uses: actions/upload-artifact@v4
      with:
        name: ci-simulation-results
        path: |
          htmlcov/
